// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @unique @default(autoincrement())
  username String @unique @db.VarChar(255)
  email String @unique @db.VarChar(255)
  password String @db.VarChar(61)
  birthday DateTime? @db.Date
  role Role @default(REGULAR)
  address Address?
  activeOrder Int?
  orders Order[]
  active Boolean @default(true)
  createdAt DateTime @default(now())
}

model Address {
  id Int @id @unique @default(autoincrement())
  country String @db.VarChar(255)
  state String @db.VarChar(255)
  city String @db.VarChar(255)
  street String @db.VarChar(255)
  number Int
  zipCode Int
  user User @relation(fields:[userID], references:[id], onDelete:Cascade)
  userID Int @unique
}

enum Role {
  REGULAR
  ADMIN
}

model Food {
  id Int @id @unique @default(autoincrement())
  name String @db.VarChar(255)
  price Float
  description String @db.VarChar(1023)
  image String @db.VarChar(255)
  categories FoodCategories[]
  orders FoodOrder[]
  createdAt DateTime @default(now())
}

model Category {
  id Int @id @unique @default(autoincrement())
  name String @unique @db.VarChar(255)
  food FoodCategories[]
  createdAt DateTime @default(now())
}

model FoodCategories {
  food Food @relation(fields:[foodID], references:[id], onDelete:Cascade)
  foodID Int
  category Category @relation(fields:[categoryID], references:[id], onDelete:Cascade)
  categoryID Int

  @@id([foodID, categoryID])
}

model Order {
  id Int @id @unique @default(autoincrement())
  completed Boolean @default(false)
  user User @relation(fields:[userID], references:[id], onDelete:Cascade)
  userID Int
  food FoodOrder[]
  createdAt DateTime @default(now())
}

model FoodOrder {
  amount Int
  food Food @relation(fields:[foodID], references:[id], onDelete:Cascade)
  foodID Int
  order Order @relation(fields:[orderID], references:[id], onDelete:Cascade)
  orderID Int
  createdAt DateTime @default(now())

  @@id([foodID, orderID])
}